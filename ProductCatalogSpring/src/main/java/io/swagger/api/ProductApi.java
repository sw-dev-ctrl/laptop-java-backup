/**
 * NOTE: This class is auto generated by the swagger code generator program (2.2.3).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Product;

import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import java.util.List;
import javax.validation.constraints.*;
import javax.validation.Valid;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2017-12-12T03:03:41.245Z")

@Api(value = "product", description = "the product API")
public interface ProductApi {

    @ApiOperation(value = "get products from the system", notes = "get all products in the system if there is no name or category defined. If name is defined then application will search based on the name. If category is defined application will search products based on category name. If both of them are defined then application will narrow down search of products name to specific category. Note that category name must be correct and should be the complete path of category.", response = Product.class, responseContainer = "List", tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Product.class, responseContainer = "List") })
    
    @RequestMapping(value = "/product",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Product>> getAllProducts(@ApiParam(value = "ID of product to return") @RequestParam(value = "name", required = false) String name,@ApiParam(value = "ID of product to return") @RequestParam(value = "category", required = false) String category);


    @ApiOperation(value = "get a products from the system", notes = "get a product from the system", response = Product.class, responseContainer = "List", tags={ "product", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Product.class, responseContainer = "List"),
        @ApiResponse(code = 404, message = "Product not found", response = Void.class) })
    
    @RequestMapping(value = "/product/{id}",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Product>> getProductById(@ApiParam(value = "ID of product to return",required=true ) @PathVariable("id") Long id);

}
